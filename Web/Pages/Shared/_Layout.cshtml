<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Web</title>
    <link rel="stylesheet" href="~/lib/bootstrap5.2.3/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Web.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
</head>
<body>
    <header>
        <nav class="navbar mb-3 border-dark border-bottom">
            <div class="col-3">
                <button class="btn" data-bs-toggle="offcanvas" data-bs-target="#category"><i class="bi bi-list h4"></i></button>
            </div>
            <div class="offcanvas offcanvas-size-sm offcanvas-start" data-bs-scroll="true" data-bs-backdrop="true" tabindex="-1" id="category">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Kategorier</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    @await Component.InvokeAsync("Categories")
                </div>
            </div>
            <a asp-page="~/Index" class="col-3">EShop</a>
            <form method="post" asp-page="Index" asp-page-handler="Search">
                <div class="btn-group">
                    <input class="form-control" type="search" name="search" />
                    <button type="submit" class="btn"><i class="bi bi-search h4"></i></button>
                </div>
            </form>
            <div class="col-3 text-end">
                @if (string.IsNullOrEmpty(ViewData["Basket"]?.ToString()))
                {
                    <div class="d-inline-block">
                        <button class="btn" type="button" data-bs-toggle="offcanvas" data-bs-target="#basket"><i class="bi bi-basket2-fill h4"></i></button>
                        @await Component.InvokeAsync("Basket")
                    </div>
                }
                @if (Context.Session.GetInt32("login").HasValue)
                {
                    <a class="btn me-3"><i class="bi bi-person-circle h4"></i></a>
                }
                else
                {
                    <a class="btn btn-primary me-3" asp-page="Login">Login</a>
                }
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - Web - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@3.0.1/dist/js.cookie.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/bootstrap5.2.3/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>

        var currency = new Intl.NumberFormat('da-DK', {
            style: 'currency',
            currency: 'DKK',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
        })

        function removeProduct(productId) {
            var products = JSON.parse(Cookies.get("Products"))
            products.splice(products.findIndex(x => x.ProductId == productId), 1)
            Cookies.set("Products", JSON.stringify(products))

            $(`#basketItem${productId}`).remove()
            updatePrice()
        }

        function updateAmount(productId, amount) {
            var products = JSON.parse(Cookies.get("Products"))
            var product = products.find(x => x.ProductId == productId)
            product.Amount = amount

            $(`#item${productId}TotalPrice`).val(Number($(`#item${productId}Price`).val()) * amount)
            $(`#item${productId}TotalPriceText`).text(currency.format($(`#item${productId}TotalPrice`).val()))
            Cookies.set("Products", JSON.stringify(products))

            updatePrice()
        }

        function updatePrice() {
            var products = JSON.parse(Cookies.get("Products"))
            var productsPrice = []

            products.forEach(x => productsPrice.push(Number($(`#item${x.ProductId}TotalPrice`).val())))

            $("#basketTotal").text(currency.format(productsPrice.length > 0 ? productsPrice.reduce((a, b) => a + b) : 0))
        }

        function showMobilepay() {
            $("#paymentcard").hide()
            $("#mobilepay").show()
        }

        function showPaymentCard() {
            $("#mobilepay").hide()
            $("#paymentcard").show()

        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>